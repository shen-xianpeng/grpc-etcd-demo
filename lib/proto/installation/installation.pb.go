// Code generated by protoc-gen-go. DO NOT EDIT.
// source: installation.proto

package installation // import "."

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ServerInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerInfoRequest) Reset()         { *m = ServerInfoRequest{} }
func (m *ServerInfoRequest) String() string { return proto.CompactTextString(m) }
func (*ServerInfoRequest) ProtoMessage()    {}
func (*ServerInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_installation_9858f876215d0b80, []int{0}
}
func (m *ServerInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerInfoRequest.Unmarshal(m, b)
}
func (m *ServerInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerInfoRequest.Marshal(b, m, deterministic)
}
func (dst *ServerInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerInfoRequest.Merge(dst, src)
}
func (m *ServerInfoRequest) XXX_Size() int {
	return xxx_messageInfo_ServerInfoRequest.Size(m)
}
func (m *ServerInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServerInfoRequest proto.InternalMessageInfo

type ServerInfoResponse struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerInfoResponse) Reset()         { *m = ServerInfoResponse{} }
func (m *ServerInfoResponse) String() string { return proto.CompactTextString(m) }
func (*ServerInfoResponse) ProtoMessage()    {}
func (*ServerInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_installation_9858f876215d0b80, []int{1}
}
func (m *ServerInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerInfoResponse.Unmarshal(m, b)
}
func (m *ServerInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerInfoResponse.Marshal(b, m, deterministic)
}
func (dst *ServerInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerInfoResponse.Merge(dst, src)
}
func (m *ServerInfoResponse) XXX_Size() int {
	return xxx_messageInfo_ServerInfoResponse.Size(m)
}
func (m *ServerInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServerInfoResponse proto.InternalMessageInfo

func (m *ServerInfoResponse) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type RegisterDeviceRequest struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterDeviceRequest) Reset()         { *m = RegisterDeviceRequest{} }
func (m *RegisterDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterDeviceRequest) ProtoMessage()    {}
func (*RegisterDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_installation_9858f876215d0b80, []int{2}
}
func (m *RegisterDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterDeviceRequest.Unmarshal(m, b)
}
func (m *RegisterDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterDeviceRequest.Marshal(b, m, deterministic)
}
func (dst *RegisterDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterDeviceRequest.Merge(dst, src)
}
func (m *RegisterDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterDeviceRequest.Size(m)
}
func (m *RegisterDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterDeviceRequest proto.InternalMessageInfo

func (m *RegisterDeviceRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type RegisterDeviceResponse struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	DeviceSecret         string   `protobuf:"bytes,2,opt,name=device_secret,json=deviceSecret,proto3" json:"device_secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterDeviceResponse) Reset()         { *m = RegisterDeviceResponse{} }
func (m *RegisterDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterDeviceResponse) ProtoMessage()    {}
func (*RegisterDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_installation_9858f876215d0b80, []int{3}
}
func (m *RegisterDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterDeviceResponse.Unmarshal(m, b)
}
func (m *RegisterDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterDeviceResponse.Marshal(b, m, deterministic)
}
func (dst *RegisterDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterDeviceResponse.Merge(dst, src)
}
func (m *RegisterDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterDeviceResponse.Size(m)
}
func (m *RegisterDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterDeviceResponse proto.InternalMessageInfo

func (m *RegisterDeviceResponse) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *RegisterDeviceResponse) GetDeviceSecret() string {
	if m != nil {
		return m.DeviceSecret
	}
	return ""
}

func init() {
	proto.RegisterType((*ServerInfoRequest)(nil), "ServerInfoRequest")
	proto.RegisterType((*ServerInfoResponse)(nil), "ServerInfoResponse")
	proto.RegisterType((*RegisterDeviceRequest)(nil), "RegisterDeviceRequest")
	proto.RegisterType((*RegisterDeviceResponse)(nil), "RegisterDeviceResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InstallationClient is the client API for Installation service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InstallationClient interface {
	// 安装app以设备为参数，从服务器端获取到一个账号和密码
	ServerInfo(ctx context.Context, in *ServerInfoRequest, opts ...grpc.CallOption) (*ServerInfoResponse, error)
	RegisterDevice(ctx context.Context, in *RegisterDeviceRequest, opts ...grpc.CallOption) (*RegisterDeviceResponse, error)
}

type installationClient struct {
	cc *grpc.ClientConn
}

func NewInstallationClient(cc *grpc.ClientConn) InstallationClient {
	return &installationClient{cc}
}

func (c *installationClient) ServerInfo(ctx context.Context, in *ServerInfoRequest, opts ...grpc.CallOption) (*ServerInfoResponse, error) {
	out := new(ServerInfoResponse)
	err := c.cc.Invoke(ctx, "/Installation/ServerInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *installationClient) RegisterDevice(ctx context.Context, in *RegisterDeviceRequest, opts ...grpc.CallOption) (*RegisterDeviceResponse, error) {
	out := new(RegisterDeviceResponse)
	err := c.cc.Invoke(ctx, "/Installation/RegisterDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InstallationServer is the server API for Installation service.
type InstallationServer interface {
	// 安装app以设备为参数，从服务器端获取到一个账号和密码
	ServerInfo(context.Context, *ServerInfoRequest) (*ServerInfoResponse, error)
	RegisterDevice(context.Context, *RegisterDeviceRequest) (*RegisterDeviceResponse, error)
}

func RegisterInstallationServer(s *grpc.Server, srv InstallationServer) {
	s.RegisterService(&_Installation_serviceDesc, srv)
}

func _Installation_ServerInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServerInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstallationServer).ServerInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Installation/ServerInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstallationServer).ServerInfo(ctx, req.(*ServerInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Installation_RegisterDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstallationServer).RegisterDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Installation/RegisterDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstallationServer).RegisterDevice(ctx, req.(*RegisterDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Installation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Installation",
	HandlerType: (*InstallationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ServerInfo",
			Handler:    _Installation_ServerInfo_Handler,
		},
		{
			MethodName: "RegisterDevice",
			Handler:    _Installation_RegisterDevice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "installation.proto",
}

func init() { proto.RegisterFile("installation.proto", fileDescriptor_installation_9858f876215d0b80) }

var fileDescriptor_installation_9858f876215d0b80 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0x31, 0x4f, 0x86, 0x30,
	0x10, 0x86, 0x3f, 0x8c, 0x31, 0x7e, 0x17, 0x24, 0x7a, 0x44, 0x24, 0xb8, 0x98, 0xba, 0x30, 0x75,
	0x50, 0x13, 0x07, 0x37, 0x75, 0x61, 0x85, 0x8d, 0xc5, 0x20, 0x3d, 0x4d, 0x13, 0xd2, 0x62, 0x5b,
	0xf9, 0x15, 0xfe, 0x68, 0x93, 0xd2, 0x44, 0x14, 0xe2, 0xd6, 0x3c, 0xed, 0xdb, 0xbb, 0xe7, 0x05,
	0x94, 0xca, 0xba, 0x6e, 0x18, 0x3a, 0x27, 0xb5, 0xe2, 0xa3, 0xd1, 0x4e, 0xb3, 0x14, 0xce, 0x1a,
	0x32, 0x13, 0x99, 0x4a, 0xbd, 0xe9, 0x9a, 0x3e, 0x3e, 0xc9, 0x3a, 0x56, 0x02, 0x2e, 0xa1, 0x1d,
	0xb5, 0xb2, 0x84, 0x08, 0x87, 0x9d, 0x10, 0x26, 0x8f, 0xae, 0xa2, 0x72, 0x5f, 0xfb, 0x33, 0xbb,
	0x83, 0xf3, 0x9a, 0xde, 0xa5, 0x75, 0x64, 0x9e, 0x69, 0x92, 0x3d, 0x85, 0x2f, 0xf0, 0x12, 0xf6,
	0xc2, 0x83, 0x17, 0x29, 0x42, 0xe2, 0x78, 0x06, 0x95, 0x60, 0x2d, 0x64, 0x7f, 0x53, 0x61, 0xc6,
	0x7f, 0x31, 0xbc, 0x86, 0x93, 0x70, 0x69, 0xa9, 0x37, 0xe4, 0xf2, 0x03, 0xff, 0x20, 0x9e, 0x61,
	0xe3, 0xd9, 0xcd, 0x57, 0x04, 0x71, 0xb5, 0xf0, 0xc4, 0x7b, 0x80, 0x1f, 0x19, 0x44, 0xbe, 0xd2,
	0x2d, 0x52, 0xbe, 0xb6, 0x65, 0x3b, 0x7c, 0x82, 0xe4, 0xf7, 0x96, 0x98, 0xf1, 0x4d, 0xd9, 0xe2,
	0x82, 0x6f, 0xeb, 0xb0, 0xdd, 0xe3, 0x69, 0x9b, 0xf0, 0x87, 0x65, 0xef, 0xaf, 0x47, 0xbe, 0xf8,
	0xdb, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa7, 0x3a, 0x0b, 0x31, 0x8e, 0x01, 0x00, 0x00,
}
